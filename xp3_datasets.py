"""This module lists the datasets used for training and evaluating BLOOMZ.
The datasets were sourced from: https://github.com/bigscience-workshop/bigscience/blob/f0999df3068e48a444adfa02eb41500291af8735/data/xp3/prepare_xp3_train.py#L165
"""

TRAIN_DATASETS = [
    # English-only
    ('glue', 'mrpc'),
    ('glue', 'qqp'),
    ('paws', 'labeled_final'),
    ('ai2_arc', 'ARC-Challenge'),
    ('ai2_arc', 'ARC-Easy'),
    ('kilt_tasks', 'hotpotqa'),
    ('trivia_qa', 'unfiltered'),
    ('web_questions', None),
    ('wiki_qa', None),
    ('adversarial_qa', 'dbidaf'),
    ('adversarial_qa', 'dbert'),
    ('adversarial_qa', 'droberta'),
    ('duorc', 'SelfRC'),
    ('duorc', 'ParaphraseRC'),
    ('ropes', None),
    ('squad_v2', None),
    ('super_glue', 'record'),
    ('quoref', None),
    ('cos_e', 'v1.11'),
    ('cosmos_qa', None),
    ('dream', None),
    ('openbookqa', 'main'),
    ('qasc', None),
    ('quail', None),
    ('quarel', None),
    ('quartz', None),
    ('race', 'high'),
    ('race', 'middle'),
    ('sciq', None),
    ('social_i_qa', None),
    ('super_glue', 'boolq'),
    ('super_glue', 'multirc'),
    ('wiki_hop', 'original'),
    ('wiqa', None),
    ('piqa', None),
    ('amazon_polarity', None),
    ('app_reviews', None),
    ('imdb', None),
    ('rotten_tomatoes', None),
    ('yelp_review_full', None),
    ('common_gen', None),
    ('wiki_bio', None),
    ('cnn_dailymail', '3.0.0'),
    ('gigaword', None),
    ('multi_news', None),
    ('samsum', None),
    ('xsum', None),
    ('ag_news', None),
    ('dbpedia_14', None),
    ('trec', None),
    # Multilingual
    ('GEM/wiki_lingua', 'ar'),
    ('GEM/wiki_lingua', 'en'),
    ('GEM/wiki_lingua', 'es'),
    ('GEM/wiki_lingua', 'fr'),
    ('GEM/wiki_lingua', 'hi'),
    ('GEM/wiki_lingua', 'id'),
    ('GEM/wiki_lingua', 'pt'),
    ('GEM/wiki_lingua', 'vi'),
    ('GEM/wiki_lingua', 'zh'),
    ('Helsinki-NLP/tatoeba_mt', 'ara-eng'),
    ('Helsinki-NLP/tatoeba_mt', 'ara-fra'),
    ('Helsinki-NLP/tatoeba_mt', 'ara-spa'),
    ('Helsinki-NLP/tatoeba_mt', 'ben-eng'),
    ('Helsinki-NLP/tatoeba_mt', 'cat-eng'),
    ('Helsinki-NLP/tatoeba_mt', 'cat-fra'),
    ('Helsinki-NLP/tatoeba_mt', 'cat-por'),
    ('Helsinki-NLP/tatoeba_mt', 'cat-spa'),
    ('Helsinki-NLP/tatoeba_mt', 'eng-cmn_Hans'),
    ('Helsinki-NLP/tatoeba_mt', 'eng-cmn_Hant'),
    ('Helsinki-NLP/tatoeba_mt', 'eng-eus'),
    ('Helsinki-NLP/tatoeba_mt', 'eng-fra'),
    ('Helsinki-NLP/tatoeba_mt', 'eng-hin'),
    ('Helsinki-NLP/tatoeba_mt', 'eng-ind'),
    ('Helsinki-NLP/tatoeba_mt', 'eng-mal'),
    ('Helsinki-NLP/tatoeba_mt', 'eng-mar'),
    ('Helsinki-NLP/tatoeba_mt', 'eng-por'),
    ('Helsinki-NLP/tatoeba_mt', 'eng-run'),
    ('Helsinki-NLP/tatoeba_mt', 'eng-spa'),
    ('Helsinki-NLP/tatoeba_mt', 'eng-swa'),
    ('Helsinki-NLP/tatoeba_mt', 'eng-tam'),
    ('Helsinki-NLP/tatoeba_mt', 'eng-tel'),
    ('Helsinki-NLP/tatoeba_mt', 'eng-urd'),
    ('Helsinki-NLP/tatoeba_mt', 'eng-vie'),
    ('Helsinki-NLP/tatoeba_mt', 'eng-zho'),
    ('Helsinki-NLP/tatoeba_mt', 'eus-spa'),
    ('Helsinki-NLP/tatoeba_mt', 'fra-cmn_Hans'),
    ('Helsinki-NLP/tatoeba_mt', 'fra-cmn_Hant'),
    ('Helsinki-NLP/tatoeba_mt', 'fra-ind'),
    ('Helsinki-NLP/tatoeba_mt', 'fra-por'),
    ('Helsinki-NLP/tatoeba_mt', 'fra-run'),
    ('Helsinki-NLP/tatoeba_mt', 'fra-spa'),
    ('Helsinki-NLP/tatoeba_mt', 'fra-vie'),
    ('Helsinki-NLP/tatoeba_mt', 'fra-zho'),
    ('Helsinki-NLP/tatoeba_mt', 'hin-urd'),
    ('Helsinki-NLP/tatoeba_mt', 'hin-zho'),
    ('Helsinki-NLP/tatoeba_mt', 'por-cmn_Hans'),
    ('Helsinki-NLP/tatoeba_mt', 'por-cmn_Hant'),
    ('Helsinki-NLP/tatoeba_mt', 'por-spa'),
    ('Helsinki-NLP/tatoeba_mt', 'por-zho'),
    ('Helsinki-NLP/tatoeba_mt', 'run-spa'),
    ('Helsinki-NLP/tatoeba_mt', 'spa-cmn_Hans'),
    ('Helsinki-NLP/tatoeba_mt', 'spa-cmn_Hant'),
    ('Helsinki-NLP/tatoeba_mt', 'spa-vie'),
    ('Helsinki-NLP/tatoeba_mt', 'spa-zho'),
    ('Helsinki-NLP/tatoeba_mt', 'vie-cmn_Hans'),
    ('Helsinki-NLP/tatoeba_mt', 'vie-zho'),
    ('xquad', 'xquad.ar'),
    ('xquad', 'xquad.zh'),
    ('xquad', 'xquad.vi'),
    ('xquad', 'xquad.en'),
    ('xquad', 'xquad.es'),
    ('xquad', 'xquad.hi'),
    ('mlqa', 'mlqa.ar.ar'),
    ('mlqa', 'mlqa.vi.vi'),
    ('mlqa', 'mlqa.zh.zh'),
    ('mlqa', 'mlqa.es.es'),
    ('mlqa', 'mlqa.en.en'),
    ('mlqa', 'mlqa.hi.hi'),
    ('mlqa', 'mlqa.ar.vi'),
    ('mlqa', 'mlqa.ar.zh'),
    ('mlqa', 'mlqa.ar.es'),
    ('mlqa', 'mlqa.ar.en'),
    ('mlqa', 'mlqa.ar.hi'),
    ('mlqa', 'mlqa.vi.ar'),
    ('mlqa', 'mlqa.vi.zh'),
    ('mlqa', 'mlqa.vi.es'),
    ('mlqa', 'mlqa.vi.en'),
    ('mlqa', 'mlqa.vi.hi'),
    ('mlqa', 'mlqa.zh.ar'),
    ('mlqa', 'mlqa.zh.vi'),
    ('mlqa', 'mlqa.zh.es'),
    ('mlqa', 'mlqa.zh.en'),
    ('mlqa', 'mlqa.zh.hi'),
    ('mlqa', 'mlqa.es.ar'),
    ('mlqa', 'mlqa.es.vi'),
    ('mlqa', 'mlqa.es.zh'),
    ('mlqa', 'mlqa.es.en'),
    ('mlqa', 'mlqa.es.hi'),
    ('mlqa', 'mlqa.en.ar'),
    ('mlqa', 'mlqa.es.vi'),
    ('mlqa', 'mlqa.es.zh'),
    ('mlqa', 'mlqa.es.es'),
    ('mlqa', 'mlqa.es.hi'),
    ('mlqa', 'mlqa.hi.ar'),
    ('mlqa', 'mlqa.hi.vi'),
    ('mlqa', 'mlqa.hi.zh'),
    ('mlqa', 'mlqa.hi.es'),
    ('mlqa', 'mlqa.hi.en'),
    ('paws-x', 'en'),
    ('paws-x', 'es'),
    ('paws-x', 'fr'),
    ('paws-x', 'zh'),
    ('khalidalt/tydiqa-primary', 'arabic'),
    ('khalidalt/tydiqa-primary', 'bengali'),
    ('khalidalt/tydiqa-primary', 'english'),
    ('khalidalt/tydiqa-primary', 'indonesian'),
    ('khalidalt/tydiqa-primary', 'swahili'),
    ('khalidalt/tydiqa-primary', 'telugu'),
    ('khalidalt/tydiqa-goldp', 'arabic'),
    ('khalidalt/tydiqa-goldp', 'bengali'),
    ('khalidalt/tydiqa-goldp', 'english'),
    ('khalidalt/tydiqa-goldp', 'indonesian'),
    ('khalidalt/tydiqa-goldp', 'swahili'),
    ('khalidalt/tydiqa-goldp', 'telugu'),
    ('Muennighoff/mbpp', 'sanitized'),
    ("great_code", None),
    ("neural_code_search", "evaluation_dataset"),
    ("codeparrot/codecomplex", "codeparrot--codecomplex"),
    ("codeparrot/github-jupyter-text-code-pairs", None),
    ("codeparrot/apps", "all"),
    ("codeparrot/xlcost-text-to-code", "Python-program-level"),
    ("codeparrot/xlcost-text-to-code", "C-program-level"),
    ("codeparrot/xlcost-text-to-code", "C++-program-level"),
    ("codeparrot/xlcost-text-to-code", "Csharp-program-level"),
    ("codeparrot/xlcost-text-to-code", "Java-program-level"),
    ("codeparrot/xlcost-text-to-code", "Javascript-program-level"),
    ("codeparrot/xlcost-text-to-code", "PHP-program-level"),
    ("teven/code_contests", None),
    ("teven/code_docstring_corpus", "top_level"),
    ("Fraser/python-state-changes", None),
    ('clue', 'c3'),
    ('clue', 'cmrc2018'),
    ('clue', 'csl'),
    ('clue', 'drcd'),
    ('clue', 'tnews'),
    ('super_glue', 'wic'),
    ('pasinit/xlwic', "xlwic_en_zh"),
    ('pasinit/xlwic', "xlwic_fr_fr"),
    ('GEM/BiSECT', "en"),
    ('GEM/BiSECT', "es"),
    ('GEM/BiSECT', "fr"),
    ('GEM/xlsum', "arabic"),
    ('GEM/xlsum', "bengali"),
    ('GEM/xlsum', "chinese_simplified"),
    ('GEM/xlsum', "chinese_traditional"),
    ('GEM/xlsum', "english"),
    ('GEM/xlsum', "french"),
    ('GEM/xlsum', "gujarati"),
    ('GEM/xlsum', "hindi"),
    ('GEM/xlsum', "igbo"),
    ('GEM/xlsum', "indonesian"),
    ('GEM/xlsum', "kirundi"),
    ('GEM/xlsum', "marathi"),
    ('GEM/xlsum', "nepali"),
    ('GEM/xlsum', "portuguese"),
    ('GEM/xlsum', "punjabi"),
    ('GEM/xlsum', "spanish"),
    ('GEM/xlsum', "swahili"),
    ('GEM/xlsum', "tamil"),
    ('GEM/xlsum', "telugu"),
    ('GEM/xlsum', "urdu"),
    ('GEM/xlsum', "vietnamese"),
    ('GEM/xlsum', "yoruba"),
    # flores200, wmt & more wikilingua added below
]

EVAL_DATASETS_L1 = [
    ('super_glue', 'wsc.fixed'),
    ('winogrande', 'winogrande_xl'),
    ('super_glue', 'cb'),
    ('super_glue', 'rte'),
    ('anli', None),
    ('story_cloze', '2016'),
    ('Muennighoff/xstory_cloze', 'ar'),
    ('Muennighoff/xstory_cloze', 'es'),
    ('Muennighoff/xstory_cloze', 'eu'),
    ('Muennighoff/xstory_cloze', 'id'),
    ('Muennighoff/xstory_cloze', 'hi'),
    ('Muennighoff/xstory_cloze', 'te'),
    ('Muennighoff/xstory_cloze', 'sw'),
    ('Muennighoff/xstory_cloze', 'zh'),
    ('hellaswag', None),
    ('super_glue', 'copa'),
    # Multilingual
    ('Muennighoff/xwinograd', 'en'),
    ('Muennighoff/xwinograd', 'fr'),
    ('Muennighoff/xwinograd', 'pt'),
    ('Muennighoff/xwinograd', 'zh'),
    ('clue', 'cluewsc2020'),
    ('xcopa', 'id'),
    ('xcopa', 'ta'),
    ('xcopa', 'sw'),
    ('xcopa', 'vi'),
    ('xcopa', 'zh'),
    ("xnli", "ar"),
    ("xnli", "en"),
    ("xnli", "es"),
    ("xnli", "fr"),
    ("xnli", "hi"),
    ("xnli", "sw"),
    ("xnli", "ur"),
    ("xnli", "vi"),
    ("xnli", "zh"),
    ("openai_humaneval", None),
    ("multi_eurlex", "all_languages")
]

EVAL_DATASETS_L2 = [
    ('Muennighoff/xwinograd', 'jp'),
    ('Muennighoff/xwinograd', 'ru'),
    ('xcopa', 'et'),
    ('xcopa', 'ht'),
    ('xcopa', 'it'),
    ('xcopa', 'qu'),
    ('xcopa', 'th'),
    ('xcopa', 'tr'),
    ("xnli", "bg"),
    ("xnli", "de"),
    ("xnli", "el"),
    ("xnli", "ru"),
    ("xnli", "th"),
    ("xnli", "tr"),
]

# The data structures below provide additional metadata for the datasets:
# (1) The tasks that they are used for
# (2) Whether they are English-only or multilingual datasets

TASK_HIERARCHY = {
    "QA_multiple_choice": [
        ("commonsense_qa", None),
        ("dream", None),
        ("quail", None),
        ("quartz", None),
        ("social_i_qa", None),
        ("wiqa", None),
        ("cosmos_qa", None),
        ("qasc", None),
        ("quarel", None),
        ("sciq", None),
        ("wiki_hop", "original"),
        ("clue", "c3"),
    ],
    "QA_closed_book": [
        ('kilt_tasks', 'hotpotqa'),
        ('wiki_qa', None),
    ],
    "QA_extractive": [
        ('adversarial_qa', 'dbidaf'),
        ('adversarial_qa', 'dbert'),
        ('adversarial_qa', 'droberta'),
        ('quoref', None),
        ('ropes', None),
        ('duorc', 'SelfRC'),
        ('duorc', 'ParaphraseRC'),
        ('xquad', 'xquad.ar'),
        ('xquad', 'xquad.zh'),
        ('xquad', 'xquad.vi'),
        ('xquad', 'xquad.en'),
        ('xquad', 'xquad.es'),
        ('xquad', 'xquad.hi'),
        ('mlqa', 'mlqa.ar.ar'),
        ('mlqa', 'mlqa.vi.vi'),
        ('mlqa', 'mlqa.zh.zh'),
        ('mlqa', 'mlqa.es.es'),
        ('mlqa', 'mlqa.en.en'),
        ('mlqa', 'mlqa.hi.hi'),
        ('mlqa', 'mlqa.ar.vi'),
        ('mlqa', 'mlqa.ar.zh'),
        ('mlqa', 'mlqa.ar.es'),
        ('mlqa', 'mlqa.ar.en'),
        ('mlqa', 'mlqa.ar.hi'),
        ('mlqa', 'mlqa.vi.ar'),
        ('mlqa', 'mlqa.vi.zh'),
        ('mlqa', 'mlqa.vi.es'),
        ('mlqa', 'mlqa.vi.en'),
        ('mlqa', 'mlqa.vi.hi'),
        ('mlqa', 'mlqa.zh.ar'),
        ('mlqa', 'mlqa.zh.vi'),
        ('mlqa', 'mlqa.zh.es'),
        ('mlqa', 'mlqa.zh.en'),
        ('mlqa', 'mlqa.zh.hi'),
        ('mlqa', 'mlqa.es.ar'),
        ('mlqa', 'mlqa.es.vi'),
        ('mlqa', 'mlqa.es.zh'),
        ('mlqa', 'mlqa.es.en'),
        ('mlqa', 'mlqa.es.hi'),
        ('mlqa', 'mlqa.en.ar'),
        ('mlqa', 'mlqa.es.vi'),
        ('mlqa', 'mlqa.es.zh'),
        ('mlqa', 'mlqa.es.es'),
        ('mlqa', 'mlqa.es.hi'),
        ('mlqa', 'mlqa.hi.ar'),
        ('mlqa', 'mlqa.hi.vi'),
        ('mlqa', 'mlqa.hi.zh'),
        ('mlqa', 'mlqa.hi.es'),
        ('mlqa', 'mlqa.hi.en'),
        ('khalidalt/tydiqa-primary', 'arabic'),
        ('khalidalt/tydiqa-primary', 'bengali'),
        ('khalidalt/tydiqa-primary', 'english'),
        ('khalidalt/tydiqa-primary', 'indonesian'),
        ('khalidalt/tydiqa-primary', 'swahili'),
        ('khalidalt/tydiqa-primary', 'telugu'),
        ('khalidalt/tydiqa-goldp', 'arabic'),
        ('khalidalt/tydiqa-goldp', 'bengali'),
        ('khalidalt/tydiqa-goldp', 'english'),
        ('khalidalt/tydiqa-goldp', 'indonesian'),
        ('khalidalt/tydiqa-goldp', 'swahili'),
        ('khalidalt/tydiqa-goldp', 'telugu'),
        ('clue', 'cmrc2018'),
        ('clue', 'drcd'),
    ],
    "topic_classification": [
        ('ag_news', None),
        ('dbpedia_14', None),
        ('trec', None),
        ('clue', 'csl'),
        ('clue', 'tnews'),
    ],
    "structure_to_text": [
        ('common_gen', None),
        ('wiki_bio', None),
        ('amazon_polarity', None),
        ('app_reviews', None),
        ('imdb', None),
        ('rotten_tomatoes', None),
        ('yelp_review_full', None),
    ],
    "paraphrase": [
        ('glue', 'mrpc'),
        ('paws', 'labeled_final'),
        ('paws-x', 'en'),
        ('paws-x', 'es'),
        ('paws-x', 'fr'),
        ('paws-x', 'zh'),
        ('glue', 'qqp'),
    ],
    "summarization": [
        ('cnn_dailymail', '3.0.0'),
        ('gigaword', None),
        ('multi_news', None),
        ('samsum', None),
        ('xsum', None),
        ('GEM/wiki_lingua', 'ar'),
        ('GEM/wiki_lingua', 'en'),
        ('GEM/wiki_lingua', 'es'),
        ('GEM/wiki_lingua', 'fr'),
        ('GEM/wiki_lingua', 'hi'),
        ('GEM/wiki_lingua', 'id'),
        ('GEM/wiki_lingua', 'pt'),
        ('GEM/wiki_lingua', 'vi'),
        ('GEM/wiki_lingua', 'zh'),
        ('GEM/xlsum', "arabic"),
        ('GEM/xlsum', "bengali"),
        ('GEM/xlsum', "chinese_simplified"),
        ('GEM/xlsum', "chinese_traditional"),
        ('GEM/xlsum', "english"),
        ('GEM/xlsum', "french"),
        ('GEM/xlsum', "gujarati"),
        ('GEM/xlsum', "hindi"),
        ('GEM/xlsum', "igbo"),
        ('GEM/xlsum', "indonesian"),
        ('GEM/xlsum', "kirundi"),
        ('GEM/xlsum', "marathi"),
        ('GEM/xlsum', "nepali"),
        ('GEM/xlsum', "portuguese"),
        ('GEM/xlsum', "punjabi"),
        ('GEM/xlsum', "spanish"),
        ('GEM/xlsum', "swahili"),
        ('GEM/xlsum', "tamil"),
        ('GEM/xlsum', "telugu"),
        ('GEM/xlsum', "urdu"),
        ('GEM/xlsum', "vietnamese"),
        ('GEM/xlsum', "yoruba"),
    ],
    "word_sense_disambiguation": [
        ('super_glue', 'wic'),
        ('pasinit/xlwic', "xlwic_en_zh"),
        ('pasinit/xlwic', "xlwic_fr_fr"),
    ],
    "translation": [
        ('Helsinki-NLP/tatoeba_mt', 'ara-eng'),
        ('Helsinki-NLP/tatoeba_mt', 'ara-fra'),
        ('Helsinki-NLP/tatoeba_mt', 'ara-spa'),
        ('Helsinki-NLP/tatoeba_mt', 'ben-eng'),
        ('Helsinki-NLP/tatoeba_mt', 'cat-eng'),
        ('Helsinki-NLP/tatoeba_mt', 'cat-fra'),
        ('Helsinki-NLP/tatoeba_mt', 'cat-por'),
        ('Helsinki-NLP/tatoeba_mt', 'cat-spa'),
        ('Helsinki-NLP/tatoeba_mt', 'eng-cmn_Hans'),
        ('Helsinki-NLP/tatoeba_mt', 'eng-cmn_Hant'),
        ('Helsinki-NLP/tatoeba_mt', 'eng-eus'),
        ('Helsinki-NLP/tatoeba_mt', 'eng-fra'),
        ('Helsinki-NLP/tatoeba_mt', 'eng-hin'),
        ('Helsinki-NLP/tatoeba_mt', 'eng-ind'),
        ('Helsinki-NLP/tatoeba_mt', 'eng-mal'),
        ('Helsinki-NLP/tatoeba_mt', 'eng-mar'),
        ('Helsinki-NLP/tatoeba_mt', 'eng-por'),
        ('Helsinki-NLP/tatoeba_mt', 'eng-run'),
        ('Helsinki-NLP/tatoeba_mt', 'eng-spa'),
        ('Helsinki-NLP/tatoeba_mt', 'eng-swa'),
        ('Helsinki-NLP/tatoeba_mt', 'eng-tam'),
        ('Helsinki-NLP/tatoeba_mt', 'eng-tel'),
        ('Helsinki-NLP/tatoeba_mt', 'eng-urd'),
        ('Helsinki-NLP/tatoeba_mt', 'eng-vie'),
        ('Helsinki-NLP/tatoeba_mt', 'eng-zho'),
        ('Helsinki-NLP/tatoeba_mt', 'eus-spa'),
        ('Helsinki-NLP/tatoeba_mt', 'fra-cmn_Hans'),
        ('Helsinki-NLP/tatoeba_mt', 'fra-cmn_Hant'),
        ('Helsinki-NLP/tatoeba_mt', 'fra-ind'),
        ('Helsinki-NLP/tatoeba_mt', 'fra-por'),
        ('Helsinki-NLP/tatoeba_mt', 'fra-run'),
        ('Helsinki-NLP/tatoeba_mt', 'fra-spa'),
        ('Helsinki-NLP/tatoeba_mt', 'fra-vie'),
        ('Helsinki-NLP/tatoeba_mt', 'fra-zho'),
        ('Helsinki-NLP/tatoeba_mt', 'hin-urd'),
        ('Helsinki-NLP/tatoeba_mt', 'hin-zho'),
        ('Helsinki-NLP/tatoeba_mt', 'por-cmn_Hans'),
        ('Helsinki-NLP/tatoeba_mt', 'por-cmn_Hant'),
        ('Helsinki-NLP/tatoeba_mt', 'por-spa'),
        ('Helsinki-NLP/tatoeba_mt', 'por-zho'),
        ('Helsinki-NLP/tatoeba_mt', 'run-spa'),
        ('Helsinki-NLP/tatoeba_mt', 'spa-cmn_Hans'),
        ('Helsinki-NLP/tatoeba_mt', 'spa-cmn_Hant'),
        ('Helsinki-NLP/tatoeba_mt', 'spa-vie'),
        ('Helsinki-NLP/tatoeba_mt', 'spa-zho'),
        ('Helsinki-NLP/tatoeba_mt', 'vie-cmn_Hans'),
        ('Helsinki-NLP/tatoeba_mt', 'vie-zho'),
        flores TODO
    ],
    "program_synthesis": [
        ("openai_humaneval", None),
        ('Muennighoff/mbpp', 'sanitized'),
        ("neural_code_search", "evaluation_dataset"),
        ("codeparrot/apps", "all"),
        ("codeparrot/xlcost-text-to-code", "Python-program-level"),
        ("codeparrot/xlcost-text-to-code", "C-program-level"),
        ("codeparrot/xlcost-text-to-code", "C++-program-level"),
        ("codeparrot/xlcost-text-to-code", "Csharp-program-level"),
        ("codeparrot/xlcost-text-to-code", "Java-program-level"),
        ("codeparrot/xlcost-text-to-code", "Javascript-program-level"),
        ("codeparrot/xlcost-text-to-code", "PHP-program-level"),
        ("teven/code_contests", None),
        ("codeparrot/github-jupyter-text-code-pairs", None),
    ],
    "code_misc." [
        ("great_code", None),
        ("codeparrot/codecomplex", "codeparrot--codecomplex"),
        ("Fraser/python-state-changes", None),
        ("teven/code_docstring_corpus", "top_level"),
    ],
    "coreference": [
        ('winogrande', 'winogrande_xl'),
        ('Muennighoff/xwinograd', 'en'),
        ('Muennighoff/xwinograd', 'fr'),
        ('Muennighoff/xwinograd', 'pt'),
        ('Muennighoff/xwinograd', 'zh'),
    ],
    "sentence_completion": [
        ('super_glue', 'copa'),
        ('xcopa', 'id'),
        ('xcopa', 'ta'),
        ('xcopa', 'sw'),
        ('xcopa', 'vi'),
        ('xcopa', 'zh'),
        ('story_cloze', '2016'),
        ('Muennighoff/xstory_cloze', 'ar'),
        ('Muennighoff/xstory_cloze', 'es'),
        ('Muennighoff/xstory_cloze', 'eu'),
        ('Muennighoff/xstory_cloze', 'id'),
        ('Muennighoff/xstory_cloze', 'hi'),
        ('Muennighoff/xstory_cloze', 'te'),
        ('Muennighoff/xstory_cloze', 'sw'),
        ('Muennighoff/xstory_cloze', 'zh'),
    ],
    "natural_language_inference": [
        ('anli', None),
        ("xnli", "ar"),
        ("xnli", "en"),
        ("xnli", "es"),
        ("xnli", "fr"),
        ("xnli", "hi"),
        ("xnli", "sw"),
        ("xnli", "ur"),
        ("xnli", "vi"),
        ("xnli", "zh"),
        ('super_glue', 'cb'),
        ('super_glue', 'rte'),
    ]
}
